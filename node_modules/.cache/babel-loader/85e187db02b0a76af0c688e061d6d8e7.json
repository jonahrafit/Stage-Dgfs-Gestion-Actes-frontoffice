{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jonah\\\\TEMPLATE REACT AZIA\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\TEMPLATE REACT AZIA\\\\src\\\\app\\\\pages\\\\patient\\\\FichePatient.js\";\nimport ComponentsSidebar from '../../components/shared/ComponentsSidebar';\nimport { Form, Button, Table } from 'react-bootstrap';\nimport Select from 'react-select';\nimport React, { useState, useEffect } from 'react';\n\nconst FichePatient = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoaded = _useState4[0],\n        setIsLoaded = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        users = _useState6[0],\n        setUsers = _useState6[1];\n\n  useEffect(() => {\n    fetch(\"https://localhost:9001/books\").then(res => res.json()).then(data => {\n      setIsLoaded(true);\n      setUsers(data);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Loading...\");\n  } else {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, users.map(user => React.createElement(\"li\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, user.title)));\n  }\n};\n\nexport default FichePatient;","map":{"version":3,"sources":["C:/Users/Jonah/TEMPLATE REACT AZIA/src/app/pages/patient/FichePatient.js"],"names":["ComponentsSidebar","Form","Button","Table","Select","React","useState","useEffect","FichePatient","error","setError","isLoaded","setIsLoaded","users","setUsers","fetch","then","res","json","data","message","map","user","id","title"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,2CAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA,oBACDF,QAAQ,CAAC,IAAD,CADP;AAAA;AAAA,QACpBG,KADoB;AAAA,QACbC,QADa;;AAAA,qBAESJ,QAAQ,CAAC,KAAD,CAFjB;AAAA;AAAA,QAEhBK,QAFgB;AAAA,QAENC,WAFM;;AAAA,qBAGGN,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,QAGhBO,KAHgB;AAAA,QAGTC,QAHS;;AAIvBP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,IAAD,IAAU;AACNP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACH,KANT,EAOSV,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAVT;AAYD,GAbM,EAaJ,EAbI,CAAT;;AAcJ,MAAIA,KAAJ,EAAW;AACH,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACW,OAAnB,CAAP;AACH,GAFL,MAEW,IAAI,CAACT,QAAL,EAAe;AAClB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,GAFM,MAEA;AACH,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,KAAK,CAACQ,GAAN,CAAUC,IAAI,IACf;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACE,KADV,CADC,CADL,CADJ;AASH;AACJ,CAjCD;;AAkCA,eAAehB,YAAf","sourcesContent":["import ComponentsSidebar from '../../components/shared/ComponentsSidebar';\r\nimport { Form, Button, Table } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\n\r\nimport React, { useState, useEffect }  from 'react';\r\nconst FichePatient = () => {\r\nconst [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        fetch(\"https://localhost:9001/books\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (data) => {\r\n                    setIsLoaded(true);\r\n                    setUsers(data);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n      }, [])\r\nif (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <ul>\r\n                {users.map(user => (\r\n                <li key={user.id}>\r\n                    {user.title} \r\n                </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\nexport default FichePatient;\r\n"]},"metadata":{},"sourceType":"module"}